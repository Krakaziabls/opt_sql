interface ParsedLLMResponse {
    optimizedSQL: string;
    comments: string;
}

export const parseLLMResponse = (response: string): ParsedLLMResponse => {
    // Ищем SQL запрос между маркерами
    const sqlMatch = response.match(/Оптимизированный SQL-запрос:\s*```sql\n([\s\S]*?)```/);
    const optimizedSQL = sqlMatch ? sqlMatch[1].trim() : '';

    // Ищем комментарии после SQL
    const commentsMatch = response.match(/Обоснование изменений:\s*([\s\S]*?)(?=Оценка улучшения:|Потенциальные риски:|$)/);
    const comments = commentsMatch ? commentsMatch[1].trim() : '';

    return {
        optimizedSQL,
        comments
    };
};

export const getPromptTemplate = (
    isMPP: boolean,
    hasConnection: boolean
): string => {
    if (isMPP && hasConnection) {
        return `Задача
Ты — специалист по оптимизации SQL-запросов в MPP-системах, включая Greenplum. Твоя цель — переписать SQL-запрос так, чтобы он выполнялся быстрее и использовал меньше ресурсов, без изменения логики и без вмешательства в СУБД.

Входные данные SQL-запрос:
{query_text}
План выполнения (EXPLAIN): {query_plan}
Метаданные таблиц: {tables_meta}

Выходные данные
Оптимизированный SQL-запрос:
{optimized_query}
Обоснование изменений:
Кратко опиши, какие узкие места были найдены в плане запроса, и какие методы оптимизации применены.
Оценка улучшения:
Примерное снижение времени выполнения или факторы, которые повлияют на производительность.
Потенциальные риски:
Возможные побочные эффекты изменений, если таковые имеются.`;
    } else if (isMPP && !hasConnection) {
        return `Задача
Ты — специалист по оптимизации SQL-запросов в MPP-системах, включая Greenplum. Твоя цель — переписать SQL-запрос так, чтобы он выполнялся быстрее и использовал меньше ресурсов, без изменения логики и без вмешательства в СУБД.

Входные данные SQL-запрос:
{query_text}

Выходные данные
Оптимизированный SQL-запрос:
{optimized_query}
Обоснование изменений:
Кратко опиши, какие методы оптимизации применены и почему.
Оценка улучшения:
Примерное снижение времени выполнения или факторы, которые повлияют на производительность.
Потенциальные риски:
Возможные побочные эффекты изменений, если таковые имеются.`;
    } else if (!isMPP && hasConnection) {
        return `Задача
Ты — специалист по оптимизации SQL-запросов в PostgreSQL. Твоя цель — переписать SQL-запрос так, чтобы он выполнялся быстрее и использовал меньше ресурсов, без изменения логики и без вмешательства в СУБД.

Входные данные SQL-запрос:
{query_text}
План выполнения (EXPLAIN): {query_plan}
Метаданные таблиц: {tables_meta}

Выходные данные
Оптимизированный SQL-запрос:
{optimized_query}
Обоснование изменений:
Кратко опиши, какие узкие места были найдены в плане запроса, и какие методы оптимизации применены.
Оценка улучшения:
Примерное снижение времени выполнения или факторы, которые повлияют на производительность.
Потенциальные риски:
Возможные побочные эффекты изменений, если таковые имеются.`;
    } else {
        return `Задача
Ты — специалист по оптимизации SQL-запросов в PostgreSQL. Твоя цель — переписать SQL-запрос так, чтобы он выполнялся быстрее и использовал меньше ресурсов, без изменения логики и без вмешательства в СУБД.

Входные данные SQL-запрос:
{query_text}

Выходные данные
Оптимизированный SQL-запрос:
{optimized_query}
Обоснование изменений:
Кратко опиши, какие методы оптимизации применены и почему.
Оценка улучшения:
Примерное снижение времени выполнения или факторы, которые повлияют на производительность.
Потенциальные риски:
Возможные побочные эффекты изменений, если таковые имеются.`;
    }
}; 